Here’s an **enhanced and well-structured version** of your Java array notes for easier understanding and future reference:

---

## 📘 **Java Arrays - Complete Notes**

### 🔹 What is an Array?

* An **array** is a **collection of elements** of the **same data type**, stored in **contiguous memory locations**.
* Arrays allow **efficient storage and access** to a fixed-size sequential collection of elements.

---

### 🔹 Basic Declaration & Initialization

```java
// Declaration with fixed size (default values are assigned)
int[] numbers = new int[5];  // [0, 0, 0, 0, 0]

// Declaration + Initialization with values
int[] numbers = {1, 2, 3, 4, 5};

// Another valid syntax
int numbers[] = {1, 2, 3, 4, 5};

// String array example
String[] names = new String[5];
names[0] = "Amey";
```

---

### 🔹 Array Indexing

* Array elements are **indexed starting from 0**.

| Element | Index |
| ------- | ----- |
| 1       | 0     |
| 2       | 1     |
| 3       | 2     |
| 4       | 3     |
| 5       | 4     |

---

### 🔹 Length of Array

* Every array has a property called `.length`:

```java
System.out.println(numbers.length);  // Output: 5
```

* It returns the **total number of elements** the array can hold (not the highest index).

---

### ⚠️ Common Error - `ArrayIndexOutOfBoundsException`

* If you try to access an index **outside the array bounds**, Java will throw this runtime exception.

```java
int[] arr = {1, 2, 3};
System.out.println(arr[3]);  // ❌ Error! Index 3 doesn't exist.
```

---

### 🔹 Operations on Arrays

#### ✅ Iteration (Using loops)

```java
// Using for loop
for (int i = 0; i < numbers.length; i++) {
    System.out.println(numbers[i]);
}

// Using enhanced for loop (for-each)
for (int num : numbers) {
    System.out.println(num);
}
```

#### ✅ Searching

```java
int target = 3;
boolean found = false;

for (int num : numbers) {
    if (num == target) {
        found = true;
        break;
    }
}
System.out.println(found ? "Found" : "Not Found");
```

#### ✅ Sorting

```java
import java.util.Arrays;
Arrays.sort(numbers);
```

#### ✅ Filtering (manual logic)

```java
for (int num : numbers) {
    if (num > 2) {
        System.out.println(num);
    }
}
```

#### ✅ Merging Two Arrays

```java
int[] a = {1, 2, 3};
int[] b = {4, 5};

int[] merged = new int[a.length + b.length];
System.arraycopy(a, 0, merged, 0, a.length);
System.arraycopy(b, 0, merged, a.length, b.length);
```

---

### 🔹 Key Points

* Arrays in Java are **fixed-size**: once declared, their size cannot be changed.
* Use **Collections like ArrayList** if you need dynamic resizing.
* Arrays can store **primitive types** and **objects**.

---

Would you like me to create a **visual diagram** or a **cheat sheet PDF** from this?


syntax forEach loop
this is a special loop only for array itration

for(int item : items){
    sout(item)
}


there are dimensions in an array 1-D , 2-D(matrix), 3-D: